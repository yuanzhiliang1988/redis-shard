server.port=8080
server.servlet.context-path=/redis-shard
spring.application.name=redis-shard

#redis分片,同分片不同属性使用:分隔,无密码可不填,多分片用逗号分隔,如:
#redis.shard.nodes=[{"host":"10.100.102.27","port":6379,"password":"PiC8Ou_mZSU7"},{"host":"10.9.198.84","port":6379},{"host":"10.9.198.84","port":6380}]
redis.shard.nodes[0].addresses=10.9.198.84:6379
redis.shard.nodes[0].gray=true
redis.shard.nodes[1].addresses=10.100.102.27:6379
redis.shard.nodes[1].password=PiC8Ou_mZSU7
redis.shard.nodes[2].addresses=10.9.198.84:6380
redis.shard.nodes[3].addresses=10.9.188.145:6379
#redis序列化方式：jdk,string、fastjson、jackson、kryo、protostuff，不配置则默认jdk
redis.shard.config.serializer=string
redis.shard.config.key-regex[0]=(test_)
redis.shard.config.key-regex[1]=(test2_)
redis.shard.jedis.pool.max-active=10
redis.shard.jedis.pool.max-wait=2s
redis.shard.jedis.pool.min-idle=5
redis.shard.enabled=true
redis.shard.listener.enabled=true

#apollo
apollo.bootstrap.enabled = true
#默认引入application，如果要引入其他public配置，请按照如下配置
apollo.bootstrap.namespaces = application

logging.level.com.ttyc.redis.shard.RedisShardExampleApplication=DEBUG